#ifndef RSA_DEFINES_H
#define RSA_DEFINES_H

#include <windows.h>

#define _BCRYPT_SUCCESS(Status) (((NTSTATUS)(Status)) >= 0)

// BCRYPT
#define BCRYPTOPENALGORITHMPROVIDER 0x3e8576bd
#define BCRYPTGENERATEKEYPAIR 0xf707b257
#define BCRYPTFINALIZEKEYPAIR 0x5f7d9768
#define BCRYPTEXPORTKEY 0x9cf69204
#define BCRYPTCLOSEALGORITHMPROVIDER 0xef8885e7
#define BCRYPTDESTROYKEY 0xdad6b776

// BCRYPT
typedef NTSTATUS (WINAPI *_BCRYPTOPENALGORITHMPROVIDER)(BCRYPT_ALG_HANDLE *phAlgorithm, LPCWSTR pszAlgId, LPCWSTR pszImplementation, ULONG dwFlags);
typedef NTSTATUS (WINAPI *_BCRYPTGENERATEKEYPAIR)(BCRYPT_ALG_HANDLE hAlgorithm, BCRYPT_KEY_HANDLE *phKey, ULONG dwLength, ULONG dwFlags);
typedef NTSTATUS (WINAPI *_BCRYPTFINALIZEKEYPAIR)(BCRYPT_KEY_HANDLE hKey, ULONG dwFlags);
typedef NTSTATUS (WINAPI *_BCRYPTEXPORTKEY)(BCRYPT_KEY_HANDLE   hKey,BCRYPT_KEY_HANDLE   hExportKey,LPCWSTR pszBlobType,PUCHAR pbOutput,ULONG cbOutput,ULONG *pcbResult,ULONG dwFlags);
typedef NTSTATUS (WINAPI *_BCRYPTCLOSEALGORITHMPROVIDER)(BCRYPT_ALG_HANDLE hAlgorithm, ULONG dwFlags);
typedef NTSTATUS (WINAPI *_BCRYPTDESTROYKEY)(BCRYPT_KEY_HANDLE hKey);

// BCRYPT
extern _BCRYPTOPENALGORITHMPROVIDER _BCryptOpenAlgorithmProvider;
extern _BCRYPTGENERATEKEYPAIR _BCryptGenerateKeyPair;
extern _BCRYPTFINALIZEKEYPAIR _BCryptFinalizeKeyPair;
extern _BCRYPTEXPORTKEY _BCryptExportKey;
extern _BCRYPTCLOSEALGORITHMPROVIDER _BCryptCloseAlgorithmProvider;
extern _BCRYPTDESTROYKEY _BCryptDestroyKey;



#endif //RSA_DEFINES_H
